<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Chip8_8cpp" kind="file" language="C++">
    <compoundname>Chip8.cpp</compoundname>
    <includes refid="Chip8_8h" local="yes">Chip8.h</includes>
    <incdepgraph>
      <node id="8">
        <label>filesystem</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>src/chip8/Chip8.cpp</label>
        <link refid="Chip8_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="2">
        <label>Chip8.h</label>
        <link refid="Chip8_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>random</label>
      </node>
      <node id="9">
        <label>Chip8_common.h</label>
        <link refid="Chip8__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>array</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Chip8_8h" kindref="compound">Chip8.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="classChip8_1a6d72f2cd7b791e0da2b66e3f9dc2b751" kindref="member">Chip8::Chip8</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/>:randGen(std::chrono::system_clock::now().time_since_epoch().count())</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>InitChip8();</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>RNG<sp/>with<sp/>uniform<sp/>distribution<sp/>for<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>randByte<sp/>=<sp/>std::uniform_int_distribution&lt;unsigned<sp/>int&gt;(0,<sp/>255U);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>function<sp/>pointer<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>InitializeTables();</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a56d6e56ac1c44143b1ae398a12527ef5" kindref="member">Chip8::LoadROM</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>buffer<sp/>=<sp/>filenameHandling(filename);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>ROM<sp/>contents<sp/>into<sp/>memory<sp/>starting<sp/>at<sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(buffer.begin(),<sp/>buffer.end(),<sp/>memory.data()<sp/>+<sp/><ref refid="Chip8__common_8h_1ad9ccf34725559026ea44950aa3b76a7a" kindref="member">START_ADDRESS</ref>);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a1ca55fd6f6711204240c85f9cd697956" kindref="member">Chip8::Cycle</ref>()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory[pc]<sp/>&lt;&lt;<sp/>8u<sp/>:<sp/>turn<sp/>this<sp/>into<sp/>a<sp/>16-bit<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>opcode<sp/>=<sp/>(memory[pc]<sp/>&lt;&lt;<sp/>8u)<sp/>|<sp/>memory[pc<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>PC<sp/>before<sp/>we<sp/>execute<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decode<sp/>and<sp/>Execute<sp/>based<sp/>on<sp/>the<sp/>opcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>((*this).*(table[(opcode<sp/>&amp;<sp/>0xF000u)<sp/>&gt;&gt;<sp/>12u]))();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>the<sp/>delay<sp/>timer<sp/>if<sp/>it&apos;s<sp/>been<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delayTimer<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--delayTimer;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decrement<sp/>the<sp/>sound<sp/>timer<sp/>if<sp/>it&apos;s<sp/>been<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(soundTimer<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--soundTimer;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Chip8::InitChip8()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>emulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/><ref refid="Chip8__common_8h_1ad9ccf34725559026ea44950aa3b76a7a" kindref="member">START_ADDRESS</ref>;<sp/></highlight><highlight class="comment">//<sp/>Program<sp/>counter<sp/>starts<sp/>at<sp/>0x200</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>opcode<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>current<sp/>opcode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>index<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>sp<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>stack<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>display,<sp/>stack,<sp/>registers,<sp/>and<sp/>memory<sp/>by<sp/>setting<sp/>value<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>video.fill(0);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.fill(0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>memory.fill(0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>registers.fill(0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>fonts<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="Chip8__common_8h_1a2a8bbb4edc9c75dc36d9579b8b69909e" kindref="member">FONTSET_SIZE</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory[<ref refid="Chip8__common_8h_1aba0a7d70c0238e8d7da879b4fa81eb4f" kindref="member">FONTSET_START_ADDRESS</ref><sp/>+<sp/>i]<sp/>=<sp/><ref refid="Chip8__common_8h_1a9f3dd0d1a2b0d5d9f785cc1437fed525" kindref="member">fontset</ref>[i];</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>timers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>delayTimer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>soundTimer<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>keypad<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>keypad.fill(0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>draw<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>draw_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Chip8::InitializeTables()</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>all<sp/>tables<sp/>with<sp/>OP_NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>table.fill(&amp;<ref refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" kindref="member">Chip8::OP_NULL</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>table0.fill(&amp;<ref refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" kindref="member">Chip8::OP_NULL</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>table8.fill(&amp;<ref refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" kindref="member">Chip8::OP_NULL</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>tableE.fill(&amp;<ref refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" kindref="member">Chip8::OP_NULL</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF.fill(&amp;<ref refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" kindref="member">Chip8::OP_NULL</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Primary<sp/>opcode<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x0]<sp/>=<sp/>&amp;<ref refid="classChip8_1a106d1884815a7a5cf805f5b8d666badc" kindref="member">Chip8::Table0</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x1]<sp/>=<sp/>&amp;<ref refid="classChip8_1a84b8dbc6bd136e941dd792bdcdacb635" kindref="member">Chip8::OP_1nnn</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x2]<sp/>=<sp/>&amp;<ref refid="classChip8_1a31d5ae177a988ac656c15e6f58b2d831" kindref="member">Chip8::OP_2nnn</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x3]<sp/>=<sp/>&amp;<ref refid="classChip8_1af8bd77b5ae887922b1a439c49a023003" kindref="member">Chip8::OP_3xkk</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x4]<sp/>=<sp/>&amp;<ref refid="classChip8_1a1c9269e6d1c14a3fdbacd4b14b5af1cd" kindref="member">Chip8::OP_4xkk</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x5]<sp/>=<sp/>&amp;<ref refid="classChip8_1a028b595e4b00f9328427a5b1b42ecda9" kindref="member">Chip8::OP_5xy0</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x6]<sp/>=<sp/>&amp;<ref refid="classChip8_1a88a38e73009a2f3c36a6cfc73b1caf27" kindref="member">Chip8::OP_6xkk</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x7]<sp/>=<sp/>&amp;<ref refid="classChip8_1a79874e5f77b4d3d6abf2d6ff58aee278" kindref="member">Chip8::OP_7xkk</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x8]<sp/>=<sp/>&amp;<ref refid="classChip8_1a3036b62ee61c7ff4a70e86cffbeaa1f8" kindref="member">Chip8::Table8</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0x9]<sp/>=<sp/>&amp;<ref refid="classChip8_1a01d5f9d78111161c8490a7bc72494a64" kindref="member">Chip8::OP_9xy0</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xA]<sp/>=<sp/>&amp;<ref refid="classChip8_1aeffd2a3c7e4492433113f2db92ee4c10" kindref="member">Chip8::OP_Annn</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xB]<sp/>=<sp/>&amp;<ref refid="classChip8_1a7ae912cf91e7c034ecbff793f2e14fb6" kindref="member">Chip8::OP_Bnnn</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xC]<sp/>=<sp/>&amp;<ref refid="classChip8_1a39864a92adc7963c323fd2103a1ed80d" kindref="member">Chip8::OP_Cxkk</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xD]<sp/>=<sp/>&amp;<ref refid="classChip8_1ae9579c58b211535fc15628266a5abae9" kindref="member">Chip8::OP_Dxyn</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xE]<sp/>=<sp/>&amp;<ref refid="classChip8_1a2932eef63db5c88bf76ffe8f898e11f9" kindref="member">Chip8::TableE</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>table[0xF]<sp/>=<sp/>&amp;<ref refid="classChip8_1afa8312496632b4ae9fc9692dd05b2e6b" kindref="member">Chip8::TableF</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>0<sp/>(Clear<sp/>and<sp/>Return)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>table0[0x0]<sp/>=<sp/>&amp;<ref refid="classChip8_1a42a0b4adc145f56db8c78e91fb3c27d8" kindref="member">Chip8::OP_00E0</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>table0[0xE]<sp/>=<sp/>&amp;<ref refid="classChip8_1ab378b35c24a9ca0c8efc8ed8175732c2" kindref="member">Chip8::OP_00EE</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>8<sp/>(Arithmetic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x0]<sp/>=<sp/>&amp;<ref refid="classChip8_1a0d72e54af39b07861db8f146d6e08e3b" kindref="member">Chip8::OP_8xy0</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x1]<sp/>=<sp/>&amp;<ref refid="classChip8_1acf3c5caff502b3e37ac331e4f9616e30" kindref="member">Chip8::OP_8xy1</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x2]<sp/>=<sp/>&amp;<ref refid="classChip8_1a6165dfc32aee86bdcea06e2c6db2bc19" kindref="member">Chip8::OP_8xy2</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x3]<sp/>=<sp/>&amp;<ref refid="classChip8_1a707447f4dbcd2c7893c7fe0eb7b4974f" kindref="member">Chip8::OP_8xy3</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x4]<sp/>=<sp/>&amp;<ref refid="classChip8_1a6d04cc7e4350b10d4c54af7b5e222c2c" kindref="member">Chip8::OP_8xy4</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x5]<sp/>=<sp/>&amp;<ref refid="classChip8_1a39b6095f460e927986c5fee7759fddda" kindref="member">Chip8::OP_8xy5</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x6]<sp/>=<sp/>&amp;<ref refid="classChip8_1a957e2b2bd4ba68ab15b69a02f8612844" kindref="member">Chip8::OP_8xy6</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0x7]<sp/>=<sp/>&amp;<ref refid="classChip8_1abd2e774be09db233592a0e5da092fae6" kindref="member">Chip8::OP_8xy7</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>table8[0xE]<sp/>=<sp/>&amp;<ref refid="classChip8_1a44df0fa024f9c2cb4e02d58a37c863f9" kindref="member">Chip8::OP_8xyE</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>E<sp/>(Key<sp/>handling)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>tableE[0x1]<sp/>=<sp/>&amp;<ref refid="classChip8_1a0537b2069b609522c9bbba0184db2725" kindref="member">Chip8::OP_ExA1</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>tableE[0xE]<sp/>=<sp/>&amp;<ref refid="classChip8_1a8e4f8dd2f117d454d5b60e5514aa57dd" kindref="member">Chip8::OP_Ex9E</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Table<sp/>F<sp/>(Timers,<sp/>memory,<sp/>and<sp/>keyboard)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x07]<sp/>=<sp/>&amp;<ref refid="classChip8_1a83698f3b7ef770b02e09d44c3daace06" kindref="member">Chip8::OP_Fx07</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x0A]<sp/>=<sp/>&amp;<ref refid="classChip8_1a39c1ec65d33cd718509edaaa69e2bc28" kindref="member">Chip8::OP_Fx0A</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x15]<sp/>=<sp/>&amp;<ref refid="classChip8_1a9f3b25aa9a4a63072eb570fdae10f0a5" kindref="member">Chip8::OP_Fx15</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x18]<sp/>=<sp/>&amp;<ref refid="classChip8_1a7659917688df1a2cc14747b083f06087" kindref="member">Chip8::OP_Fx18</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x1E]<sp/>=<sp/>&amp;<ref refid="classChip8_1a1ba6c43bbae06d99dd0266412167daf2" kindref="member">Chip8::OP_Fx1E</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x29]<sp/>=<sp/>&amp;<ref refid="classChip8_1ace4a58f583f3c971b1dc5ae96b7e855a" kindref="member">Chip8::OP_Fx29</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x33]<sp/>=<sp/>&amp;<ref refid="classChip8_1aabcbaa3bf8bba432c06129e92c7a818f" kindref="member">Chip8::OP_Fx33</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x55]<sp/>=<sp/>&amp;<ref refid="classChip8_1a8fdbd98f87ae424cd7c3ceee230b68c9" kindref="member">Chip8::OP_Fx55</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>tableF[0x65]<sp/>=<sp/>&amp;<ref refid="classChip8_1a18d0410d24b6cdc71c12b39c60f49f0f" kindref="member">Chip8::OP_Fx65</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">std::vector&lt;uint8_t&gt;<sp/>Chip8::filenameHandling(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filename)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::filesystem::path(filename).extension()<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;.ch8&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>file<sp/>does<sp/>not<sp/>have<sp/>a<sp/>.ch8<sp/>extension<sp/>or<sp/>doesn&apos;t<sp/>exist.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(filename,<sp/>std::ios::binary<sp/>|<sp/>std::ios::ate);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.is_open())</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>open<sp/>the<sp/>file,<sp/>check<sp/>if<sp/>it<sp/>exists<sp/>or<sp/>is<sp/>corrupted\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>file<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::streamsize<sp/>size<sp/>=<sp/>file.tellg();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>file.seekg(0,<sp/>std::ios::beg);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/><ref refid="Chip8__common_8h_1a74c382836b3154349485b726985abcef" kindref="member">MEMORY_SIZE</ref><sp/>-<sp/><ref refid="Chip8__common_8h_1ad9ccf34725559026ea44950aa3b76a7a" kindref="member">START_ADDRESS</ref>)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;The<sp/>size<sp/>of<sp/>the<sp/>loaded<sp/>ROM<sp/>is<sp/>bigger<sp/>than<sp/>actual<sp/>memory<sp/>size\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>file<sp/>contents<sp/>into<sp/>a<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>buffer(size);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.read(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(buffer.data()),<sp/>size))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>read<sp/>the<sp/>file<sp/>contents.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/chip8/Chip8.cpp"/>
  </compounddef>
</doxygen>
