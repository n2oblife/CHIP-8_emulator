<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Opcodes_8cpp" kind="file" language="C++">
    <compoundname>Opcodes.cpp</compoundname>
    <includes refid="Chip8_8h" local="yes">Chip8.h</includes>
    <incdepgraph>
      <node id="8">
        <label>filesystem</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>src/chip8/Opcodes.cpp</label>
        <link refid="Opcodes_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="2">
        <label>Chip8.h</label>
        <link refid="Chip8_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>fstream</label>
      </node>
      <node id="4">
        <label>random</label>
      </node>
      <node id="9">
        <label>Chip8_common.h</label>
        <link refid="Chip8__common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>array</label>
      </node>
      <node id="5">
        <label>chrono</label>
      </node>
      <node id="6">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Chip8_8h" kindref="compound">Chip8.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//TODO:<sp/>adapt<sp/>this<sp/>file<sp/>to<sp/>C++<sp/>standards<sp/>with<sp/>std::arrays<sp/>instead<sp/>of<sp/>raw<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a42a0b4adc145f56db8c78e91fb3c27d8" kindref="member">Chip8::OP_00E0</ref>()</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>video.fill(0);</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1ab378b35c24a9ca0c8efc8ed8175732c2" kindref="member">Chip8::OP_00EE</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>--sp;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>stack[sp];</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a84b8dbc6bd136e941dd792bdcdacb635" kindref="member">Chip8::OP_1nnn</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x0FFFu;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a31d5ae177a988ac656c15e6f58b2d831" kindref="member">Chip8::OP_2nnn</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x0FFFu;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>stack[sp]<sp/>=<sp/>pc;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>++sp;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1af8bd77b5ae887922b1a439c49a023003" kindref="member">Chip8::OP_3xkk</ref>()</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>opcode<sp/>&amp;<sp/>0x00FFu;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vx]<sp/>==<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a1c9269e6d1c14a3fdbacd4b14b5af1cd" kindref="member">Chip8::OP_4xkk</ref>()</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>opcode<sp/>&amp;<sp/>0x00FFu;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vx]<sp/>!=<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a028b595e4b00f9328427a5b1b42ecda9" kindref="member">Chip8::OP_5xy0</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vx]<sp/>==<sp/>registers[Vy])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a88a38e73009a2f3c36a6cfc73b1caf27" kindref="member">Chip8::OP_6xkk</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>opcode<sp/>&amp;<sp/>0x00FFu;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a79874e5f77b4d3d6abf2d6ff58aee278" kindref="member">Chip8::OP_7xkk</ref>()</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>opcode<sp/>&amp;<sp/>0x00FFu;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>+=<sp/>byte;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a0d72e54af39b07861db8f146d6e08e3b" kindref="member">Chip8::OP_8xy0</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1acf3c5caff502b3e37ac331e4f9616e30" kindref="member">Chip8::OP_8xy1</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>|=<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a6165dfc32aee86bdcea06e2c6db2bc19" kindref="member">Chip8::OP_8xy2</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>&amp;=<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a707447f4dbcd2c7893c7fe0eb7b4974f" kindref="member">Chip8::OP_8xy3</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>^=<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a6d04cc7e4350b10d4c54af7b5e222c2c" kindref="member">Chip8::OP_8xy4</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sum<sp/>=<sp/>registers[Vx]<sp/>+<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&gt;<sp/>255U)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>sum<sp/>&amp;<sp/>0xFFu;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a39b6095f460e927986c5fee7759fddda" kindref="member">Chip8::OP_8xy5</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vx]<sp/>&gt;<sp/>registers[Vy])</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>-=<sp/>registers[Vy];</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a957e2b2bd4ba68ab15b69a02f8612844" kindref="member">Chip8::OP_8xy6</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>least<sp/>significant<sp/>bit<sp/>in<sp/>VF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>(registers[Vx]<sp/>&amp;<sp/>0x1u);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1abd2e774be09db233592a0e5da092fae6" kindref="member">Chip8::OP_8xy7</ref>()</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vy]<sp/>&gt;<sp/>registers[Vx])</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>registers[Vy]<sp/>-<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a44df0fa024f9c2cb4e02d58a37c863f9" kindref="member">Chip8::OP_8xyE</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>the<sp/>most<sp/>significant<sp/>bit<sp/>in<sp/>VF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>(registers[Vx]<sp/>&amp;<sp/>0x80u)<sp/>&gt;&gt;<sp/>7u;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>&lt;&lt;=<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a01d5f9d78111161c8490a7bc72494a64" kindref="member">Chip8::OP_9xy0</ref>()</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(registers[Vx]<sp/>!=<sp/>registers[Vy])</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1aeffd2a3c7e4492433113f2db92ee4c10" kindref="member">Chip8::OP_Annn</ref>()</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x0FFFu;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x0FFFu;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a7ae912cf91e7c034ecbff793f2e14fb6" kindref="member">Chip8::OP_Bnnn</ref>()</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>address<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x0FFFu;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>=<sp/>registers[0]<sp/>+<sp/>address;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a39864a92adc7963c323fd2103a1ed80d" kindref="member">Chip8::OP_Cxkk</ref>()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>opcode<sp/>&amp;<sp/>0x00FFu;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>randByte(randGen)<sp/>&amp;<sp/>byte;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1ae9579c58b211535fc15628266a5abae9" kindref="member">Chip8::OP_Dxyn</ref>()</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vy<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x00F0u)<sp/>&gt;&gt;<sp/>4u;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>height<sp/>=<sp/>opcode<sp/>&amp;<sp/>0x000Fu;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wrap<sp/>if<sp/>going<sp/>beyond<sp/>screen<sp/>boundaries<sp/>(modulo<sp/>to<sp/>fit)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>xPos<sp/>=<sp/>registers[Vx]<sp/>%<sp/><ref refid="Chip8__common_8h_1af606dd29a060e0be4db1ef26d6c8b6c2" kindref="member">VIDEO_WIDTH</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>yPos<sp/>=<sp/>registers[Vy]<sp/>%<sp/><ref refid="Chip8__common_8h_1afa371e06a264d544473951fc2c846830" kindref="member">VIDEO_HEIGHT</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>height;<sp/>++row)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fetch<sp/>the<sp/>current<sp/>sprite<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index<sp/>supposed<sp/>to<sp/>be<sp/>already<sp/>set<sp/>to<sp/>the<sp/>address<sp/>in<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>spriteByte<sp/>=<sp/>memory[index<sp/>+<sp/>row];</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>8;<sp/>++col)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>sprite<sp/>pixel<sp/>is<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>spritePixel<sp/>=<sp/>spriteByte<sp/>&amp;<sp/>(0x80u<sp/>&gt;&gt;<sp/>col);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t*<sp/>screenPixel<sp/>=<sp/>&amp;video[(yPos<sp/>+<sp/>row)<sp/>*<sp/><ref refid="Chip8__common_8h_1af606dd29a060e0be4db1ef26d6c8b6c2" kindref="member">VIDEO_WIDTH</ref><sp/>+<sp/>(xPos<sp/>+<sp/>col)];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sprite<sp/>pixel<sp/>is<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spritePixel)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Screen<sp/>pixel<sp/>also<sp/>on<sp/>-&gt;<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*screenPixel<sp/>==<sp/>0xFFFFFFFF)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[0xF]<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>Collision<sp/>detected<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Effectively<sp/>XOR<sp/>with<sp/>the<sp/>sprite<sp/>pixel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*screenPixel<sp/>^=<sp/>0xFFFFFFFF;<sp/></highlight><highlight class="comment">//<sp/>Toggle<sp/>the<sp/>screen<sp/>pixel<sp/>on/off</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a8e4f8dd2f117d454d5b60e5514aa57dd" kindref="member">Chip8::OP_Ex9E</ref>()</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>key<sp/>=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keypad[key])</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a0537b2069b609522c9bbba0184db2725" kindref="member">Chip8::OP_ExA1</ref>()</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>key<sp/>=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!keypad[key])</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a83698f3b7ef770b02e09d44c3daace06" kindref="member">Chip8::OP_Fx07</ref>()</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>delayTimer;</highlight></codeline>
<codeline lineno="254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a39c1ec65d33cd718509edaaa69e2bc28" kindref="member">Chip8::OP_Fx0A</ref>()</highlight></codeline>
<codeline lineno="257"><highlight class="normal">{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>keypad<sp/>to<sp/>find<sp/>a<sp/>pressed<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="Chip8__common_8h_1a12d17f49f5c98eaa66dbbf5419fa3059" kindref="member">NUM_KEYS</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keypad[i])<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>i;<sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>key<sp/>pressed<sp/>in<sp/>Vx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exit<sp/>the<sp/>function<sp/>as<sp/>we&apos;ve<sp/>found<sp/>a<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>key<sp/>was<sp/>pressed,<sp/>so<sp/>we<sp/>decrement<sp/>the<sp/>program<sp/>counter<sp/>to<sp/>wait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>pc<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a7247805f474b0d904aec2db80f4d8922" kindref="member">Chip8::OP_Fx0A_optimized</ref>()</highlight></codeline>
<codeline lineno="273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>Generate<sp/>a<sp/>bitmask<sp/>of<sp/>pressed<sp/>keys.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>part<sp/>is<sp/>optimized<sp/>by<sp/>modern<sp/>compilers</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/>and<sp/>tailored<sp/>for<sp/>the<sp/>CHIP-8<sp/>keypad</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>keyMask<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>16;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keypad[i])<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyMask<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>i);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(keyMask)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>lowest<sp/>set<sp/>bit,<sp/>indicating<sp/>the<sp/>first<sp/>key<sp/>pressed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[Vx]<sp/>=<sp/>__builtin_ctz(keyMask);<sp/><sp/></highlight><highlight class="comment">//<sp/>GCC/Clang<sp/>intrinsic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc<sp/>-=<sp/>2;<sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>key<sp/>pressed,<sp/>wait<sp/>by<sp/>decrementing<sp/>PC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a9f3b25aa9a4a63072eb570fdae10f0a5" kindref="member">Chip8::OP_Fx15</ref>()</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>delayTimer<sp/>=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a7659917688df1a2cc14747b083f06087" kindref="member">Chip8::OP_Fx18</ref>()</highlight></codeline>
<codeline lineno="304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>soundTimer<sp/>=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a1ba6c43bbae06d99dd0266412167daf2" kindref="member">Chip8::OP_Fx1E</ref>()</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>+=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1ace4a58f583f3c971b1dc5ae96b7e855a" kindref="member">Chip8::OP_Fx29</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>digit<sp/>=<sp/>registers[Vx];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>index<sp/>=<sp/><ref refid="Chip8__common_8h_1aba0a7d70c0238e8d7da879b4fa81eb4f" kindref="member">FONTSET_START_ADDRESS</ref><sp/>+<sp/>(<ref refid="Chip8__common_8h_1abee21fac9ef087a6928ff69fcebdcc0a" kindref="member">FONT_SIZE</ref><sp/>*<sp/>digit);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1aabcbaa3bf8bba432c06129e92c7a818f" kindref="member">Chip8::OP_Fx33</ref>()</highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;<sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>Vx<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/>registers[Vx];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>value<sp/>stored<sp/>in<sp/>Vx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>using<sp/>a<sp/>loop<sp/>enable<sp/>the<sp/>compiler<sp/>to<sp/>optimize<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>memory[index<sp/>+<sp/>2]<sp/>=<sp/>value<sp/>%<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>ones<sp/>digit<sp/>in<sp/>I+2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>/=<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>ones<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>memory[index<sp/>+<sp/>1]<sp/>=<sp/>value<sp/>%<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>tens<sp/>digit<sp/>in<sp/>I+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>/=<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>tens<sp/>digit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>memory[index]<sp/>=<sp/>value<sp/>%<sp/>10;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>hundreds<sp/>digit<sp/>in<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a8fdbd98f87ae424cd7c3ceee230b68c9" kindref="member">Chip8::OP_Fx55</ref>()</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>Vx;<sp/>++i)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memory[index<sp/>+<sp/>i]<sp/>=<sp/>registers[i];</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a18d0410d24b6cdc71c12b39c60f49f0f" kindref="member">Chip8::OP_Fx65</ref>()</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>Vx<sp/>=<sp/>(opcode<sp/>&amp;<sp/>0x0F00u)<sp/>&gt;&gt;<sp/>8u;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;=<sp/>Vx;<sp/>++i)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>registers[i]<sp/>=<sp/>memory[index<sp/>+<sp/>i];</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a106d1884815a7a5cf805f5b8d666badc" kindref="member">Chip8::Table0</ref>()</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>((*this).*(table0[opcode<sp/>&amp;<sp/>0x000Fu]))();</highlight></codeline>
<codeline lineno="359"><highlight class="normal">};</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a3036b62ee61c7ff4a70e86cffbeaa1f8" kindref="member">Chip8::Table8</ref>()</highlight></codeline>
<codeline lineno="362"><highlight class="normal">{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/>((*this).*(table8[opcode<sp/>&amp;<sp/>0x000Fu]))();</highlight></codeline>
<codeline lineno="364"><highlight class="normal">};</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1a2932eef63db5c88bf76ffe8f898e11f9" kindref="member">Chip8::TableE</ref>()</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>((*this).*(tableE[opcode<sp/>&amp;<sp/>0x000Fu]))();</highlight></codeline>
<codeline lineno="369"><highlight class="normal">};</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classChip8_1afa8312496632b4ae9fc9692dd05b2e6b" kindref="member">Chip8::TableF</ref>()</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>((*this).*(tableF[opcode<sp/>&amp;<sp/>0x00FFu]))();</highlight></codeline>
<codeline lineno="374"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="src/chip8/Opcodes.cpp"/>
  </compounddef>
</doxygen>
