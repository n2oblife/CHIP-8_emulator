<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classChip8" kind="class" language="C++" prot="public">
    <compoundname>Chip8</compoundname>
    <includes refid="Chip8_8h" local="no">Chip8.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classChip8_1a5a07fa4e49d0b45c235eaadf3ccfcdbd" prot="private" static="no">
        <type>void(Chip8::*)()</type>
        <definition>using Chip8::Chip8Func =  void (Chip8::*)()</definition>
        <argsstring></argsstring>
        <name>Chip8Func</name>
        <briefdescription>
<para>Typedef for CHIP-8 opcode function pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="222" column="6" bodyfile="include/Chip8.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classChip8_1a1b575873ada4d2b9126cc54c10d236db" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint8_t, <ref refid="Chip8__common_8h_1ab17ec02f1b62065b7d82bb1939df8419" kindref="member">NUM_REGISTERS</ref> &gt;</type>
        <definition>std::array&lt;uint8_t, NUM_REGISTERS&gt; Chip8::registers</definition>
        <argsstring></argsstring>
        <name>registers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>General-purpose registers (V0-VF). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="198" column="17" bodyfile="include/Chip8.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a0dc1d403a9a3ebee8edffc81104bce89" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint8_t, <ref refid="Chip8__common_8h_1a74c382836b3154349485b726985abcef" kindref="member">MEMORY_SIZE</ref> &gt;</type>
        <definition>std::array&lt;uint8_t, MEMORY_SIZE&gt; Chip8::memory</definition>
        <argsstring></argsstring>
        <name>memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Memory (4KB). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="199" column="17" bodyfile="include/Chip8.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a2af12650003a8316e6299cef275d903e" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t Chip8::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Index register (I). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="200" column="15" bodyfile="include/Chip8.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a4cf699335179f41d2777e350beb3dddb" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t Chip8::pc</definition>
        <argsstring></argsstring>
        <name>pc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Program counter (PC). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="201" column="15" bodyfile="include/Chip8.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1aaa0bc0e6b9966f9a35fa90f9073048cb" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint16_t, <ref refid="Chip8__common_8h_1a56d0e53fb55fc4510a12e2a5d17efbb6" kindref="member">STACK_SIZE</ref> &gt;</type>
        <definition>std::array&lt;uint16_t, STACK_SIZE&gt; Chip8::stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stack for subroutine calls. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="202" column="17" bodyfile="include/Chip8.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1ada80292af5ea1c7283b200c7e136b28d" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Chip8::sp</definition>
        <argsstring></argsstring>
        <name>sp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stack pointer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="203" column="14" bodyfile="include/Chip8.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a8760493931a1209a207eb9d9f1995f00" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Chip8::delayTimer</definition>
        <argsstring></argsstring>
        <name>delayTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delay timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="204" column="14" bodyfile="include/Chip8.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a6273017540576b43e1b79ed264029dc1" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Chip8::soundTimer</definition>
        <argsstring></argsstring>
        <name>soundTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sound timer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="205" column="14" bodyfile="include/Chip8.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1ac3f6f0e56e24634cadc992029833fe46" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint8_t, <ref refid="Chip8__common_8h_1a12d17f49f5c98eaa66dbbf5419fa3059" kindref="member">NUM_KEYS</ref> &gt;</type>
        <definition>std::array&lt;uint8_t, NUM_KEYS&gt; Chip8::keypad</definition>
        <argsstring></argsstring>
        <name>keypad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Keypad state (16 keys). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="206" column="17" bodyfile="include/Chip8.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a00f3d21aef0e4bca9f5a0c2c4effdf27" prot="private" static="no" mutable="no">
        <type>std::array&lt; uint32_t, <ref refid="Chip8__common_8h_1afa371e06a264d544473951fc2c846830" kindref="member">VIDEO_HEIGHT</ref> *<ref refid="Chip8__common_8h_1af606dd29a060e0be4db1ef26d6c8b6c2" kindref="member">VIDEO_WIDTH</ref> &gt;</type>
        <definition>std::array&lt;uint32_t, VIDEO_HEIGHT * VIDEO_WIDTH&gt; Chip8::video</definition>
        <argsstring></argsstring>
        <name>video</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>64x32 monochrome display. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="207" column="17" bodyfile="include/Chip8.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a1030bae314b55cf858d69c08a9f0f576" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t Chip8::opcode</definition>
        <argsstring></argsstring>
        <name>opcode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current opcode being executed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="208" column="15" bodyfile="include/Chip8.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1ad56f39e752c042eca8812fee22ede80e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Chip8::draw_flag</definition>
        <argsstring></argsstring>
        <name>draw_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flag indicating if the display needs updating. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="210" column="11" bodyfile="include/Chip8.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a422c34a2f3dc8e864d1235e451b8cd99" prot="private" static="no" mutable="no">
        <type>std::default_random_engine</type>
        <definition>std::default_random_engine Chip8::randGen</definition>
        <argsstring></argsstring>
        <name>randGen</name>
        <briefdescription>
<para>Random number generator engine. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="213" column="33" bodyfile="include/Chip8.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a12099bc06bca5298c84e1abadc6abd5d" prot="private" static="no" mutable="no">
        <type>std::uniform_int_distribution&lt; unsigned int &gt;</type>
        <definition>std::uniform_int_distribution&lt;unsigned int&gt; Chip8::randByte</definition>
        <argsstring></argsstring>
        <name>randByte</name>
        <briefdescription>
<para>Uniform distribution for random number generation. </para>
        </briefdescription>
        <detaileddescription>
<para>Used for generating random bytes, typically in the OP_Cxkk instruction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="219" column="36" bodyfile="include/Chip8.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a49ad959a2d18b5e52d218234b60674c3" prot="private" static="no" mutable="no">
        <type>std::array&lt; Chip8Func, 0x10 &gt;</type>
        <definition>std::array&lt;Chip8Func, 0x10&gt; Chip8::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Main opcode function table (0x0 - 0xF). </para>
        </briefdescription>
        <detaileddescription>
<para>Maps opcode prefixes to their corresponding handler functions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="228" column="17" bodyfile="include/Chip8.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1ae706009e304fef0e0073ef048acaf16e" prot="private" static="no" mutable="no">
        <type>std::array&lt; Chip8Func, 0xF+1 &gt;</type>
        <definition>std::array&lt;Chip8Func, 0xF + 1&gt; Chip8::table0</definition>
        <argsstring></argsstring>
        <name>table0</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Opcode table for 0x0 series instructions. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles opcodes OP_00E0 and OP_00EE. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="234" column="17" bodyfile="include/Chip8.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a2e4130695102da74a171132808c50954" prot="private" static="no" mutable="no">
        <type>std::array&lt; Chip8Func, 0xF+1 &gt;</type>
        <definition>std::array&lt;Chip8Func, 0xF + 1&gt; Chip8::table8</definition>
        <argsstring></argsstring>
        <name>table8</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Opcode table for 0x8 series instructions. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles arithmetic and logic operations involving Vx and Vy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="240" column="17" bodyfile="include/Chip8.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1abe6d4153c4987ce24be21fa20c1a7654" prot="private" static="no" mutable="no">
        <type>std::array&lt; Chip8Func, 0xF+1 &gt;</type>
        <definition>std::array&lt;Chip8Func, 0xF + 1&gt; Chip8::tableE</definition>
        <argsstring></argsstring>
        <name>tableE</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Opcode table for 0xE series instructions. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles keypress-related operations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="246" column="17" bodyfile="include/Chip8.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classChip8_1a48e443e962e5b6f0c812fb0032785fd2" prot="private" static="no" mutable="no">
        <type>std::array&lt; Chip8Func, 0x66 &gt;</type>
        <definition>std::array&lt;Chip8Func, 0x66&gt; Chip8::tableF</definition>
        <argsstring></argsstring>
        <name>tableF</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Opcode table for 0xF series instructions. </para>
        </briefdescription>
        <detaileddescription>
<para>Handles timer operations, memory management, and input handling. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="252" column="17" bodyfile="include/Chip8.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classChip8_1afcb2f9f3c0bc48762b32b4f300bd0e5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TestChip8</definition>
        <argsstring></argsstring>
        <name>TestChip8</name>
        <briefdescription>
<para>Allows TestChip8 to access private members for unit testing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="268" column="6" bodyfile="include/Chip8.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classChip8_1a6d72f2cd7b791e0da2b66e3f9dc2b751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Chip8::Chip8</definition>
        <argsstring>()</argsstring>
        <name>Chip8</name>
        <briefdescription>
<para>Constructor: Initializes the CHIP-8 emulator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="33" column="6" bodyfile="src/chip8/Chip8.cpp" bodystart="3" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a311c9b84aded9f0c32a0c8d8b168aab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Chip8::~Chip8</definition>
        <argsstring>()=default</argsstring>
        <name>~Chip8</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="38" column="6"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a749133d07698b60f01c3a09d9da68ecf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; uint8_t, <ref refid="Chip8__common_8h_1a12d17f49f5c98eaa66dbbf5419fa3059" kindref="member">NUM_KEYS</ref> &gt;</type>
        <definition>std::array&lt;uint8_t, NUM_KEYS&gt; Chip8::get_keypad</definition>
        <argsstring>() const</argsstring>
        <name>get_keypad</name>
        <briefdescription>
<para>Get the current state of the keypad. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An array representing the keypad state (pressed keys). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="46" column="24" bodyfile="include/Chip8.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a023eaff9475804dc30b172a8fbeb567e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::array&lt; uint32_t, <ref refid="Chip8__common_8h_1afa371e06a264d544473951fc2c846830" kindref="member">VIDEO_HEIGHT</ref> *<ref refid="Chip8__common_8h_1af606dd29a060e0be4db1ef26d6c8b6c2" kindref="member">VIDEO_WIDTH</ref> &gt;</type>
        <definition>std::array&lt;uint32_t, VIDEO_HEIGHT * VIDEO_WIDTH&gt; Chip8::get_video</definition>
        <argsstring>() const</argsstring>
        <name>get_video</name>
        <briefdescription>
<para>Get the current state of the video display. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An array representing the monochrome 64x32 display. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="52" column="24" bodyfile="include/Chip8.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a56d6e56ac1c44143b1ae398a12527ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::LoadROM</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>LoadROM</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Loads a ROM file into memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the ROM file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="60" column="11" bodyfile="src/chip8/Chip8.cpp" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a42a0b4adc145f56db8c78e91fb3c27d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_00E0</definition>
        <argsstring>()</argsstring>
        <name>OP_00E0</name>
        <briefdescription>
<para>Clears the display. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="63" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1ab378b35c24a9ca0c8efc8ed8175732c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_00EE</definition>
        <argsstring>()</argsstring>
        <name>OP_00EE</name>
        <briefdescription>
<para>Returns from a subroutine. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="66" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a84b8dbc6bd136e941dd792bdcdacb635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_1nnn</definition>
        <argsstring>()</argsstring>
        <name>OP_1nnn</name>
        <briefdescription>
<para>Jumps to address NNN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="69" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="15" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a31d5ae177a988ac656c15e6f58b2d831" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_2nnn</definition>
        <argsstring>()</argsstring>
        <name>OP_2nnn</name>
        <briefdescription>
<para>Calls subroutine at address NNN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="72" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="22" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1af8bd77b5ae887922b1a439c49a023003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_3xkk</definition>
        <argsstring>()</argsstring>
        <name>OP_3xkk</name>
        <briefdescription>
<para>Skips next instruction if Vx == kk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="75" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a1c9269e6d1c14a3fdbacd4b14b5af1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_4xkk</definition>
        <argsstring>()</argsstring>
        <name>OP_4xkk</name>
        <briefdescription>
<para>Skips next instruction if Vx != kk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="78" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a028b595e4b00f9328427a5b1b42ecda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_5xy0</definition>
        <argsstring>()</argsstring>
        <name>OP_5xy0</name>
        <briefdescription>
<para>Skips next instruction if Vx == Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="81" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a88a38e73009a2f3c36a6cfc73b1caf27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_6xkk</definition>
        <argsstring>()</argsstring>
        <name>OP_6xkk</name>
        <briefdescription>
<para>Sets Vx = kk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="84" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a79874e5f77b4d3d6abf2d6ff58aee278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_7xkk</definition>
        <argsstring>()</argsstring>
        <name>OP_7xkk</name>
        <briefdescription>
<para>Sets Vx = Vx + kk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="87" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="66" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a0d72e54af39b07861db8f146d6e08e3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy0</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy0</name>
        <briefdescription>
<para>Sets Vx = Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="90" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1acf3c5caff502b3e37ac331e4f9616e30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy1</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy1</name>
        <briefdescription>
<para>Performs bitwise OR: Vx = Vx | Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="93" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a6165dfc32aee86bdcea06e2c6db2bc19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy2</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy2</name>
        <briefdescription>
<para>Performs bitwise AND: Vx = Vx &amp; Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="96" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="90" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a707447f4dbcd2c7893c7fe0eb7b4974f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy3</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy3</name>
        <briefdescription>
<para>Performs bitwise XOR: Vx = Vx ^ Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="99" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a6d04cc7e4350b10d4c54af7b5e222c2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy4</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy4</name>
        <briefdescription>
<para>Adds Vx and Vy, storing result in Vx and setting VF if overflow occurs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="102" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="106" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a39b6095f460e927986c5fee7759fddda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy5</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy5</name>
        <briefdescription>
<para>Subtracts Vy from Vx, storing result in Vx and setting VF to NOT borrow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="105" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a957e2b2bd4ba68ab15b69a02f8612844" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy6</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy6</name>
        <briefdescription>
<para>Shifts Vx right by 1, storing the least significant bit in VF. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="108" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1abd2e774be09db233592a0e5da092fae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xy7</definition>
        <argsstring>()</argsstring>
        <name>OP_8xy7</name>
        <briefdescription>
<para>Sets Vx = Vy - Vx, setting VF to NOT borrow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="111" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="143" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a44df0fa024f9c2cb4e02d58a37c863f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_8xyE</definition>
        <argsstring>()</argsstring>
        <name>OP_8xyE</name>
        <briefdescription>
<para>Shifts Vx left by 1, storing the most significant bit in VF. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="114" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="156" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a01d5f9d78111161c8490a7bc72494a64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_9xy0</definition>
        <argsstring>()</argsstring>
        <name>OP_9xy0</name>
        <briefdescription>
<para>Skips next instruction if Vx != Vy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="117" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="165" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1aeffd2a3c7e4492433113f2db92ee4c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Annn</definition>
        <argsstring>()</argsstring>
        <name>OP_Annn</name>
        <briefdescription>
<para>Sets I = NNN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="120" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a7ae912cf91e7c034ecbff793f2e14fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Bnnn</definition>
        <argsstring>()</argsstring>
        <name>OP_Bnnn</name>
        <briefdescription>
<para>Jumps to location NNN + V0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="123" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a39864a92adc7963c323fd2103a1ed80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Cxkk</definition>
        <argsstring>()</argsstring>
        <name>OP_Cxkk</name>
        <briefdescription>
<para>Sets Vx = random byte &amp; kk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="126" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1ae9579c58b211535fc15628266a5abae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Dxyn</definition>
        <argsstring>()</argsstring>
        <name>OP_Dxyn</name>
        <briefdescription>
<para>Draws a sprite at coordinate (Vx, Vy). </para>
        </briefdescription>
        <detaileddescription>
<para>The sprite is <computeroutput>n</computeroutput> bytes in height and starts at memory location I. VF is set to 1 if any pixels are erased due to collision. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="133" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="194" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a8e4f8dd2f117d454d5b60e5514aa57dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Ex9E</definition>
        <argsstring>()</argsstring>
        <name>OP_Ex9E</name>
        <briefdescription>
<para>Skips next instruction if key Vx is pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="136" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="232" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a0537b2069b609522c9bbba0184db2725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_ExA1</definition>
        <argsstring>()</argsstring>
        <name>OP_ExA1</name>
        <briefdescription>
<para>Skips next instruction if key Vx is not pressed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="139" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="241" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a83698f3b7ef770b02e09d44c3daace06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx07</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx07</name>
        <briefdescription>
<para>Sets Vx to the value of the delay timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="142" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a39c1ec65d33cd718509edaaa69e2bc28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx0A</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx0A</name>
        <briefdescription>
<para>Waits for a key press and stores the value in Vx. </para>
        </briefdescription>
        <detaileddescription>
<para>Execution pauses until a key is pressed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="148" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="256" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a7247805f474b0d904aec2db80f4d8922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx0A_optimized</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx0A_optimized</name>
        <briefdescription>
<para>Optimized version of OP_Fx0A. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="153" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="272" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a9f3b25aa9a4a63072eb570fdae10f0a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx15</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx15</name>
        <briefdescription>
<para>Sets the delay timer to Vx. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="156" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a7659917688df1a2cc14747b083f06087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx18</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx18</name>
        <briefdescription>
<para>Sets the sound timer to Vx. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="159" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="303" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a1ba6c43bbae06d99dd0266412167daf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx1E</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx1E</name>
        <briefdescription>
<para>Sets I = I + Vx. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="162" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="310" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1ace4a58f583f3c971b1dc5ae96b7e855a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx29</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx29</name>
        <briefdescription>
<para>Sets I to the location of the sprite for digit Vx. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="165" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="317" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1aabcbaa3bf8bba432c06129e92c7a818f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx33</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx33</name>
        <briefdescription>
<para>Stores the BCD representation of Vx at memory locations I, I+1, and I+2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="170" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="325" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a8fdbd98f87ae424cd7c3ceee230b68c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx55</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx55</name>
        <briefdescription>
<para>Stores registers V0 through Vx in memory starting at I. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="173" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a18d0410d24b6cdc71c12b39c60f49f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_Fx65</definition>
        <argsstring>()</argsstring>
        <name>OP_Fx65</name>
        <briefdescription>
<para>Reads registers V0 through Vx from memory starting at I. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="176" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="348" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a106d1884815a7a5cf805f5b8d666badc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::Table0</definition>
        <argsstring>()</argsstring>
        <name>Table0</name>
        <briefdescription>
<para>Handles OP_00E* opcode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="179" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="356" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a3036b62ee61c7ff4a70e86cffbeaa1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::Table8</definition>
        <argsstring>()</argsstring>
        <name>Table8</name>
        <briefdescription>
<para>Handles OP_8xy* opcode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="182" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a2932eef63db5c88bf76ffe8f898e11f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::TableE</definition>
        <argsstring>()</argsstring>
        <name>TableE</name>
        <briefdescription>
<para>Handles OP_Ex** opcode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="185" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="366" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1afa8312496632b4ae9fc9692dd05b2e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::TableF</definition>
        <argsstring>()</argsstring>
        <name>TableF</name>
        <briefdescription>
<para>Handles OP_Fx** opcode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="188" column="11" bodyfile="src/chip8/Opcodes.cpp" bodystart="371" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::OP_NULL</definition>
        <argsstring>()</argsstring>
        <name>OP_NULL</name>
        <briefdescription>
<para>Handles unimplemented opcodes (NOP). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="191" column="11" bodyfile="include/Chip8.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a1ca55fd6f6711204240c85f9cd697956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::Cycle</definition>
        <argsstring>()</argsstring>
        <name>Cycle</name>
        <briefdescription>
<para>Executes one cycle of the CHIP-8 CPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="194" column="11" bodyfile="src/chip8/Chip8.cpp" bodystart="23" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classChip8_1a956e600bcf40768aed2b468f6809e737" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt; uint8_t &gt; Chip8::filenameHandling</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>filenameHandling</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Checks and processes the ROM file before loading it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the ROM file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector containing the ROM&apos;s binary data. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="259" column="18" bodyfile="src/chip8/Chip8.cpp" bodystart="131" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1aec9b04a70447e88d7e7ff44a2ec8163b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::InitChip8</definition>
        <argsstring>()</argsstring>
        <name>InitChip8</name>
        <briefdescription>
<para>Initializes CHIP-8 system components (memory, registers, etc.). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="262" column="11" bodyfile="src/chip8/Chip8.cpp" bodystart="44" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classChip8_1a9a54062b429a70e9cc45d836b182e3a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Chip8::InitializeTables</definition>
        <argsstring>()</argsstring>
        <name>InitializeTables</name>
        <briefdescription>
<para>Initializes opcode function tables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/Chip8.h" line="265" column="11" bodyfile="src/chip8/Chip8.cpp" bodystart="73" bodyend="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CHIP-8 Emulator. </para>
    </briefdescription>
    <detaileddescription>
<para>This class emulates a CHIP-8 CPU, providing methods to load ROMs, execute instructions, and interact with the display and keypad. </para>
    </detaileddescription>
    <location file="include/Chip8.h" line="28" column="1" bodyfile="include/Chip8.h" bodystart="27" bodyend="270"/>
    <listofallmembers>
      <member refid="classChip8_1a6d72f2cd7b791e0da2b66e3f9dc2b751" prot="public" virt="non-virtual"><scope>Chip8</scope><name>Chip8</name></member>
      <member refid="classChip8_1a5a07fa4e49d0b45c235eaadf3ccfcdbd" prot="private" virt="non-virtual"><scope>Chip8</scope><name>Chip8Func</name></member>
      <member refid="classChip8_1a1ca55fd6f6711204240c85f9cd697956" prot="public" virt="non-virtual"><scope>Chip8</scope><name>Cycle</name></member>
      <member refid="classChip8_1a8760493931a1209a207eb9d9f1995f00" prot="private" virt="non-virtual"><scope>Chip8</scope><name>delayTimer</name></member>
      <member refid="classChip8_1ad56f39e752c042eca8812fee22ede80e" prot="private" virt="non-virtual"><scope>Chip8</scope><name>draw_flag</name></member>
      <member refid="classChip8_1a956e600bcf40768aed2b468f6809e737" prot="private" virt="non-virtual"><scope>Chip8</scope><name>filenameHandling</name></member>
      <member refid="classChip8_1a749133d07698b60f01c3a09d9da68ecf" prot="public" virt="non-virtual"><scope>Chip8</scope><name>get_keypad</name></member>
      <member refid="classChip8_1a023eaff9475804dc30b172a8fbeb567e" prot="public" virt="non-virtual"><scope>Chip8</scope><name>get_video</name></member>
      <member refid="classChip8_1a2af12650003a8316e6299cef275d903e" prot="private" virt="non-virtual"><scope>Chip8</scope><name>index</name></member>
      <member refid="classChip8_1aec9b04a70447e88d7e7ff44a2ec8163b" prot="private" virt="non-virtual"><scope>Chip8</scope><name>InitChip8</name></member>
      <member refid="classChip8_1a9a54062b429a70e9cc45d836b182e3a5" prot="private" virt="non-virtual"><scope>Chip8</scope><name>InitializeTables</name></member>
      <member refid="classChip8_1ac3f6f0e56e24634cadc992029833fe46" prot="private" virt="non-virtual"><scope>Chip8</scope><name>keypad</name></member>
      <member refid="classChip8_1a56d6e56ac1c44143b1ae398a12527ef5" prot="public" virt="non-virtual"><scope>Chip8</scope><name>LoadROM</name></member>
      <member refid="classChip8_1a0dc1d403a9a3ebee8edffc81104bce89" prot="private" virt="non-virtual"><scope>Chip8</scope><name>memory</name></member>
      <member refid="classChip8_1a42a0b4adc145f56db8c78e91fb3c27d8" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_00E0</name></member>
      <member refid="classChip8_1ab378b35c24a9ca0c8efc8ed8175732c2" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_00EE</name></member>
      <member refid="classChip8_1a84b8dbc6bd136e941dd792bdcdacb635" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_1nnn</name></member>
      <member refid="classChip8_1a31d5ae177a988ac656c15e6f58b2d831" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_2nnn</name></member>
      <member refid="classChip8_1af8bd77b5ae887922b1a439c49a023003" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_3xkk</name></member>
      <member refid="classChip8_1a1c9269e6d1c14a3fdbacd4b14b5af1cd" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_4xkk</name></member>
      <member refid="classChip8_1a028b595e4b00f9328427a5b1b42ecda9" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_5xy0</name></member>
      <member refid="classChip8_1a88a38e73009a2f3c36a6cfc73b1caf27" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_6xkk</name></member>
      <member refid="classChip8_1a79874e5f77b4d3d6abf2d6ff58aee278" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_7xkk</name></member>
      <member refid="classChip8_1a0d72e54af39b07861db8f146d6e08e3b" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy0</name></member>
      <member refid="classChip8_1acf3c5caff502b3e37ac331e4f9616e30" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy1</name></member>
      <member refid="classChip8_1a6165dfc32aee86bdcea06e2c6db2bc19" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy2</name></member>
      <member refid="classChip8_1a707447f4dbcd2c7893c7fe0eb7b4974f" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy3</name></member>
      <member refid="classChip8_1a6d04cc7e4350b10d4c54af7b5e222c2c" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy4</name></member>
      <member refid="classChip8_1a39b6095f460e927986c5fee7759fddda" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy5</name></member>
      <member refid="classChip8_1a957e2b2bd4ba68ab15b69a02f8612844" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy6</name></member>
      <member refid="classChip8_1abd2e774be09db233592a0e5da092fae6" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xy7</name></member>
      <member refid="classChip8_1a44df0fa024f9c2cb4e02d58a37c863f9" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_8xyE</name></member>
      <member refid="classChip8_1a01d5f9d78111161c8490a7bc72494a64" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_9xy0</name></member>
      <member refid="classChip8_1aeffd2a3c7e4492433113f2db92ee4c10" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Annn</name></member>
      <member refid="classChip8_1a7ae912cf91e7c034ecbff793f2e14fb6" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Bnnn</name></member>
      <member refid="classChip8_1a39864a92adc7963c323fd2103a1ed80d" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Cxkk</name></member>
      <member refid="classChip8_1ae9579c58b211535fc15628266a5abae9" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Dxyn</name></member>
      <member refid="classChip8_1a8e4f8dd2f117d454d5b60e5514aa57dd" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Ex9E</name></member>
      <member refid="classChip8_1a0537b2069b609522c9bbba0184db2725" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_ExA1</name></member>
      <member refid="classChip8_1a83698f3b7ef770b02e09d44c3daace06" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx07</name></member>
      <member refid="classChip8_1a39c1ec65d33cd718509edaaa69e2bc28" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx0A</name></member>
      <member refid="classChip8_1a7247805f474b0d904aec2db80f4d8922" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx0A_optimized</name></member>
      <member refid="classChip8_1a9f3b25aa9a4a63072eb570fdae10f0a5" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx15</name></member>
      <member refid="classChip8_1a7659917688df1a2cc14747b083f06087" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx18</name></member>
      <member refid="classChip8_1a1ba6c43bbae06d99dd0266412167daf2" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx1E</name></member>
      <member refid="classChip8_1ace4a58f583f3c971b1dc5ae96b7e855a" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx29</name></member>
      <member refid="classChip8_1aabcbaa3bf8bba432c06129e92c7a818f" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx33</name></member>
      <member refid="classChip8_1a8fdbd98f87ae424cd7c3ceee230b68c9" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx55</name></member>
      <member refid="classChip8_1a18d0410d24b6cdc71c12b39c60f49f0f" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_Fx65</name></member>
      <member refid="classChip8_1ad8e7ec07e93adc8cefcd4fcda82abe8b" prot="public" virt="non-virtual"><scope>Chip8</scope><name>OP_NULL</name></member>
      <member refid="classChip8_1a1030bae314b55cf858d69c08a9f0f576" prot="private" virt="non-virtual"><scope>Chip8</scope><name>opcode</name></member>
      <member refid="classChip8_1a4cf699335179f41d2777e350beb3dddb" prot="private" virt="non-virtual"><scope>Chip8</scope><name>pc</name></member>
      <member refid="classChip8_1a12099bc06bca5298c84e1abadc6abd5d" prot="private" virt="non-virtual"><scope>Chip8</scope><name>randByte</name></member>
      <member refid="classChip8_1a422c34a2f3dc8e864d1235e451b8cd99" prot="private" virt="non-virtual"><scope>Chip8</scope><name>randGen</name></member>
      <member refid="classChip8_1a1b575873ada4d2b9126cc54c10d236db" prot="private" virt="non-virtual"><scope>Chip8</scope><name>registers</name></member>
      <member refid="classChip8_1a6273017540576b43e1b79ed264029dc1" prot="private" virt="non-virtual"><scope>Chip8</scope><name>soundTimer</name></member>
      <member refid="classChip8_1ada80292af5ea1c7283b200c7e136b28d" prot="private" virt="non-virtual"><scope>Chip8</scope><name>sp</name></member>
      <member refid="classChip8_1aaa0bc0e6b9966f9a35fa90f9073048cb" prot="private" virt="non-virtual"><scope>Chip8</scope><name>stack</name></member>
      <member refid="classChip8_1a49ad959a2d18b5e52d218234b60674c3" prot="private" virt="non-virtual"><scope>Chip8</scope><name>table</name></member>
      <member refid="classChip8_1ae706009e304fef0e0073ef048acaf16e" prot="private" virt="non-virtual"><scope>Chip8</scope><name>table0</name></member>
      <member refid="classChip8_1a106d1884815a7a5cf805f5b8d666badc" prot="public" virt="non-virtual"><scope>Chip8</scope><name>Table0</name></member>
      <member refid="classChip8_1a2e4130695102da74a171132808c50954" prot="private" virt="non-virtual"><scope>Chip8</scope><name>table8</name></member>
      <member refid="classChip8_1a3036b62ee61c7ff4a70e86cffbeaa1f8" prot="public" virt="non-virtual"><scope>Chip8</scope><name>Table8</name></member>
      <member refid="classChip8_1a2932eef63db5c88bf76ffe8f898e11f9" prot="public" virt="non-virtual"><scope>Chip8</scope><name>TableE</name></member>
      <member refid="classChip8_1abe6d4153c4987ce24be21fa20c1a7654" prot="private" virt="non-virtual"><scope>Chip8</scope><name>tableE</name></member>
      <member refid="classChip8_1afa8312496632b4ae9fc9692dd05b2e6b" prot="public" virt="non-virtual"><scope>Chip8</scope><name>TableF</name></member>
      <member refid="classChip8_1a48e443e962e5b6f0c812fb0032785fd2" prot="private" virt="non-virtual"><scope>Chip8</scope><name>tableF</name></member>
      <member refid="classChip8_1afcb2f9f3c0bc48762b32b4f300bd0e5d" prot="private" virt="non-virtual"><scope>Chip8</scope><name>TestChip8</name></member>
      <member refid="classChip8_1a00f3d21aef0e4bca9f5a0c2c4effdf27" prot="private" virt="non-virtual"><scope>Chip8</scope><name>video</name></member>
      <member refid="classChip8_1a311c9b84aded9f0c32a0c8d8b168aab0" prot="public" virt="non-virtual"><scope>Chip8</scope><name>~Chip8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
